// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/04/2023 16:29:21"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Display_7_Segmentos
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Display_7_Segmentos_vlg_vec_tst();
// constants                                           
// general purpose registers
reg W_a;
reg X_b;
reg Y_c;
reg Z_d;
// wires                                               
wire OUT_A;
wire OUT_B;
wire OUT_C;
wire OUT_D;
wire OUT_E;
wire OUT_F;
wire OUT_G;

// assign statements (if any)                          
Display_7_Segmentos i1 (
// port map - connection between master ports and signals/registers   
	.OUT_A(OUT_A),
	.OUT_B(OUT_B),
	.OUT_C(OUT_C),
	.OUT_D(OUT_D),
	.OUT_E(OUT_E),
	.OUT_F(OUT_F),
	.OUT_G(OUT_G),
	.W_a(W_a),
	.X_b(X_b),
	.Y_c(Y_c),
	.Z_d(Z_d)
);
initial 
begin 
#1000000 $stop;
end 

// W_a
initial
begin
	W_a = 1'b0;
end 

// X_b
initial
begin
	X_b = 1'b0;
end 

// Y_c
initial
begin
	Y_c = 1'b0;
end 

// Z_d
initial
begin
	Z_d = 1'b0;
end 
endmodule

